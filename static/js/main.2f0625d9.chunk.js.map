{"version":3,"sources":["logo.svg","components/ColorPicker.js","App.js","reportWebVitals.js","index.js"],"names":["ColorPicker","React","useState","color","setColor","inputColor","setInputColor","onChange","e","target","value","useEffect","document","body","style","backgroundColor","className","type","name","placeholder","required","onClick","alert","getElementById","textContent","id","fontSize","fontWeight","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qOAAe,I,kBCyCAA,MAtCf,WAEI,IAFmB,EASOC,IAAMC,SAAS,IATtB,mBASZC,EATY,KASLC,EATK,OAUiBH,IAAMC,SAAS,IAVhC,mBAUZG,EAVY,KAUAC,EAVA,KAmBbC,EAAW,SAACC,GACdF,EAAcE,EAAEC,OAAOC,QAK3B,OAFAC,qBAAU,WAAQC,SAASC,KAAKC,MAAMC,gBAAkBZ,KAGhD,sBAAKa,UAAU,YAAf,UACI,uBAAOC,KAAK,OAAOC,KAAK,cAAcC,YAAY,mBAAmBZ,SAAUA,EAAUa,SAAS,SAClG,uBAAOH,KAAK,QAAQV,SAAUA,EAAUW,KAAK,iBAC7C,wBAAQD,KAAK,SAASI,QAjBd,WAChBC,MAAM,iCACNlB,EAASC,GACAO,SAASW,eAAe,gBAC9BC,YAAcrB,GAaT,sBAA6D,uBAC7D,uBAAOsB,GAAG,eAAV,8BACA,mBAAGX,MAAO,CAAEX,MAAOA,EAAOuB,SAAU,OAAQC,WAAY,QAAxD,0JCtBDC,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCKSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5B,SAASW,eAAe,SAM1BM,M","file":"static/js/main.2f0625d9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component, useEffect } from 'react';\r\nimport './ColorPicker.css';\r\n\r\nfunction ColorPicker() {\r\n\r\n    const values = ['red', 'blue', 'green']\r\n\r\n    let state = {\r\n        color : '',\r\n        inputColor : ''\r\n    }\r\n\r\n    const [color, setColor] = React.useState('');\r\n    const [inputColor, setInputColor] = React.useState('');\r\n\r\n    const handleClick = () => {\r\n        alert(\"Now click to change the color\");\r\n        setColor(inputColor);\r\n        let lb = document.getElementById('output_label');\r\n        lb.textContent = color;\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setInputColor(e.target.value);\r\n    };\r\n\r\n    useEffect(() => { document.body.style.backgroundColor = color });\r\n\r\n    return (\r\n            <div className=\"btn-style\">\r\n                <input type=\"text\" name=\"color_input\" placeholder=\"Enter color name\" onChange={onChange} required=\"true\"></input>\r\n                <input type=\"color\" onChange={onChange} name=\"color_select\"></input>\r\n                <button type=\"submit\" onClick={handleClick}>Click Me</button><br/>\r\n                <label id=\"output_label\">Nothing Selected</label>\r\n                <p style={{ color: color, fontSize: \"30px\", fontWeight: \"bold\" }} >This para is used as a default text for checking purpose.\r\n                    This is a work of fiction all resemblance to any person is purely coincidental\r\n                </p>\r\n            </div>\r\n            );\r\n}\r\n\r\nexport default ColorPicker;","import logo from './logo.svg';\nimport './App.css';\nimport ColorPicker from './components/ColorPicker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ColorPicker/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}